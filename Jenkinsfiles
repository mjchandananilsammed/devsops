pipeline {
    agent any
    environment{
        SONAR_HOME= tool "Sonar"
    }
    stages {
        stage("Clone Code From Github"){
            steps{
                git url: "https://github.com/mjchandananilsammed/devsops.git" , branch: "main"
            }
        }
        stage("SoneQube Quality analysis"){
            steps{
                withSonarQubeEnv("Sonar") {
                    sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=wanderlust -Dsonar.projectKey=wanderlust"
                }
            }
        }
        stage("OWSAP Dependency Check"){
            steps{
                dependencyCheck additionalArguments: '--scan ./' , odcInstallation: 'dc'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                
            }
        }
        stage("Sonar Quality Gate Scan"){
            steps{
                timeout(time: 2, unit: "MINUTES") {
                    waitForQualityGate abortPipeline: false
                }
            }
        }
        stage("Trivy File system Scan"){
            steps{
                sh "trivy fs --format table -o trivy-fs-report.html ."
            }
        }
        stage("Deploy using docker"){
            steps{
                sh "docker-compose up -d"
            }
        }
    }
}
